#!/bin/bash

# Synopsys
#   gen_case <song_n> <dvd_n> <dvd_cap> <lower_bound> <upper_bound>
#
# Description
#   Output a random input_file for Algorithms PA2.
#
# Options
#   song_n
#     Number of songs or "r".
#     "r" stands for random.
#     "r" range from 10 to 32777.
#   dvd_n
#     Number of DVDs or "r".
#     "r" range from 2 to song_n*0.2.
#   dvd_cap
#     Capacity of a DVD in minute or "r".
#     "r" range s.t. dvd_n*dvd_cap = 0.2*song_n*song_avg_duration.
#   lower_bound
#     Lower bound of duration of a song in minute.
#     Inclusive.
#   upper_bound
#     Upper bound of duration of a song in minute.
#     Inclusive.
#
# Output Format
#     <song_n> <dvd_n> <dvd_cap>
#     <song_1_minutes> <song_2_minutes> ...
#   Example
#     4 2 5
#     4 3 4 2
#
# Example
#   gen_case 1000 50 20 1 30
#
# Exit Status
#   0 Success.
#   1 Error.

print_usage() {
    echo "Usage: "
    echo "  gen_case <song_n> <dvd_n> <dvd_cap> <lower_bound> <upper_bound>"
}

is_number() {
    local num_regex='^([0-9]|[1-9][0-9]+)$'
    if [[ $1 =~ $num_regex ]]; then
        return 0
    else
        return 1
    fi
}

# Parse arguments.
if [ $# -ne 5 ]; then
    print_usage
    exit 1
fi

if is_number "$1"; then
    song_n="$1"
elif [ "$1" = "r" ]; then
    song_n=$((RANDOM + 10))
else
    print_usage
    echo "song_n should be a number or 'r' for random."
    exit 1
fi

if is_number "$2"; then
    dvd_n="$2"
elif [ "$2" = "r" ]; then
    dvd_n=$((RANDOM%(song_n/5 - 2) + 2))
else
    print_usage
    echo "dvd_n should be a number or 'r' for random."
    exit 1
fi

if ! is_number "$4"; then
    print_usage
    echo "lower_bound should be a number."
    exit 1
elif [ "$4" -gt 32767 ]; then
    echo "lower_bound should be <= 32767."
    exit 1
else
    lowerb="$4"
fi

if ! is_number "$5"; then
    print_usage
    echo "<upper_bound> should be a number."
    exit 1
elif [ "$5" -gt 32767 ]; then
    echo "upper_bound should be <= 32767."
    exit 1
elif [ "$5" -lt "$lowerb" ]; then
    echo "upper_bound should be >= lower_bound."
    exit 1
else
    upperb="$5"
fi

if is_number "$3"; then
    dvd_cap="$3"
elif [ "$3" = "r" ]; then
    dvd_cap=$((song_n/5*(lowerb + upperb)/2/dvd_n))
else
    print_usage
    echo "<dvd_n> should be a number or 'r' for random."
    exit 1
fi

# Start output.
echo "$song_n $dvd_n $dvd_cap"

for ((i = 0; i < song_n; ++i)); do
    echo -n "$((RANDOM%(upperb - lowerb + 1) + lowerb)) "
done
echo

